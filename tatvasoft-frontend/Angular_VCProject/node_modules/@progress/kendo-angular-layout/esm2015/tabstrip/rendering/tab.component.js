/**-----------------------------------------------------------------------------------------
* Copyright © 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';
import { isPresent } from '../../common/util';
import { TabCloseEvent } from '../events/tabclose-event';
import * as i0 from "@angular/core";
import * as i1 from "@progress/kendo-angular-l10n";
import * as i2 from "@angular/common";
/**
 * @hidden
 */
export class TabComponent {
    constructor(localization) {
        this.localization = localization;
        this.tabClose = new EventEmitter();
        this.hostClasses = true;
    }
    get activeClass() {
        return this.tab.selected;
    }
    get disabledClass() {
        return this.tab.disabled;
    }
    get focusedClass() {
        return this.tab.focused;
    }
    get tabIndex() {
        return this.tab.selected || this.tab.focused ? 0 : -1;
    }
    get tabClosable() {
        if (this.tab.closable !== undefined) {
            return this.tab.closable;
        }
        return this.tabStripClosable;
    }
    get closeButtonClasses() {
        if (isPresent(this.tab.closeIcon)) {
            return this.tab.closeIcon;
        }
        return this.tabStripCloseIcon;
    }
    get closeButtonTitle() {
        return this.localization.get('closeTitle');
    }
    closeTab(index) {
        const closeArgs = new TabCloseEvent(index, this.tab);
        this.tabClose.emit(closeArgs);
    }
}
TabComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabComponent, deps: [{ token: i1.LocalizationService }], target: i0.ɵɵFactoryTarget.Component });
TabComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.16", type: TabComponent, selector: "[kendoTabStripTab]", inputs: { tab: "tab", index: "index", tabStripClosable: "tabStripClosable", tabStripCloseIcon: "tabStripCloseIcon" }, outputs: { tabClose: "tabClose" }, host: { properties: { "class.k-item": "this.hostClasses", "class.k-state-default": "this.hostClasses", "attr.aria-selected": "this.activeClass", "class.k-active": "this.activeClass", "attr.aria-disabled]": "this.disabledClass", "class.k-disabled": "this.disabledClass", "class.k-focus": "this.focusedClass", "attr.tabindex": "this.tabIndex" } }, ngImport: i0, template: `
        <span class="k-link" *ngIf="!tab.tabTitle">{{ tab.title }}</span>
        <span class="k-link" *ngIf="tab.tabTitle">
            <ng-template [ngTemplateOutlet]="tab.tabTitle?.templateRef">
            </ng-template>
        </span>
        <span class="k-remove-tab k-button k-icon-button k-flat" *ngIf="tabClosable"
            role="button"
            [title]="closeButtonTitle"
            [attr.aria-label]="closeButtonTitle"
            (click)="closeTab(index)"
        >
            <span [ngClass]="closeButtonClasses"></span>
        </span>
    `, isInline: true, directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.16", ngImport: i0, type: TabComponent, decorators: [{
            type: Component,
            args: [{
                    // eslint-disable-next-line @angular-eslint/component-selector
                    selector: '[kendoTabStripTab]',
                    template: `
        <span class="k-link" *ngIf="!tab.tabTitle">{{ tab.title }}</span>
        <span class="k-link" *ngIf="tab.tabTitle">
            <ng-template [ngTemplateOutlet]="tab.tabTitle?.templateRef">
            </ng-template>
        </span>
        <span class="k-remove-tab k-button k-icon-button k-flat" *ngIf="tabClosable"
            role="button"
            [title]="closeButtonTitle"
            [attr.aria-label]="closeButtonTitle"
            (click)="closeTab(index)"
        >
            <span [ngClass]="closeButtonClasses"></span>
        </span>
    `
                }]
        }], ctorParameters: function () { return [{ type: i1.LocalizationService }]; }, propDecorators: { tab: [{
                type: Input
            }], index: [{
                type: Input
            }], tabStripClosable: [{
                type: Input
            }], tabStripCloseIcon: [{
                type: Input
            }], tabClose: [{
                type: Output
            }], hostClasses: [{
                type: HostBinding,
                args: ['class.k-item']
            }, {
                type: HostBinding,
                args: ['class.k-state-default']
            }], activeClass: [{
                type: HostBinding,
                args: ['attr.aria-selected']
            }, {
                type: HostBinding,
                args: ['class.k-active']
            }], disabledClass: [{
                type: HostBinding,
                args: ['attr.aria-disabled]']
            }, {
                type: HostBinding,
                args: ['class.k-disabled']
            }], focusedClass: [{
                type: HostBinding,
                args: ['class.k-focus']
            }], tabIndex: [{
                type: HostBinding,
                args: ['attr.tabindex']
            }] } });
