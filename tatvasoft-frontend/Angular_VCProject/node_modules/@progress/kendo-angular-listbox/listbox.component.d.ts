/**-----------------------------------------------------------------------------------------
* Copyright © 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import { ElementRef, EventEmitter, OnDestroy, Renderer2 } from '@angular/core';
import { ListBoxSelectionEvent, ListBoxSelectionService } from './selection.service';
import { ItemTemplateDirective } from './item-template.directive';
import { ListBoxSize } from './size';
import { ActionName, ListBoxToolbarConfig, Tool } from './toolbar';
import * as i0 from "@angular/core";
/**
 * Represents the [Kendo UI ListBox component for Angular]({% slug overview_listbox %}).
 */
export declare class ListBoxComponent implements OnDestroy {
    selectionService: ListBoxSelectionService;
    private renderer;
    private hostElement;
    /**
     * @hidden
     */
    listboxClassName: boolean;
    /**
     * @hidden
     */
    itemTemplate: ItemTemplateDirective;
    /**
     * The fields of the data item that provide the text content of the nodes.
     */
    textField: string;
    /**
     * The data which will be displayed by the ListBox.
     */
    data: any[];
    /**
     * Sets the size of the component.
     *
     * The possible values are:
     * - `'small'`
     * - `'medium'` (default)
     * - `'large'`
     */
    size: ListBoxSize;
    /**
     * Sets whether a toolbar should be displayed with the ListBox, as well as what tools and position should be used.
     */
    set toolbar(config: ListBoxToolbarConfig);
    /**
     * A function which determines if a specific item is disabled.
     */
    itemDisabled: (item: any) => boolean;
    /**
     * Fires when the user selects a different ListBox item. Also fires when a node is moved, since that also changes its index.
     */
    selectionChange: EventEmitter<ListBoxSelectionEvent>;
    /**
     * Fires when the user clicks a ListBox item.
     */
    actionClick: EventEmitter<ActionName>;
    /**
     * @hidden
     */
    get listClasses(): string;
    /**
     * @hidden
     */
    selectedTools: Tool[];
    private sub;
    constructor(selectionService: ListBoxSelectionService, renderer: Renderer2, hostElement: ElementRef);
    /**
     * @hidden
     */
    ngOnDestroy(): void;
    /**
     * @hidden
     */
    performAction(actionName: ActionName): void;
    /**
     * Programmatically selects a ListBox node.
     */
    selectItem(index: number): void;
    /**
     * Programmatically clears the ListBox selection.
     */
    clearSelection(): void;
    /**
     * The index of the currently selected item in the ListBox.
     */
    get selectedIndex(): number;
    /**
     * @hidden
     */
    getText(dataItem: any): string;
    private setToolbarClass;
    static ɵfac: i0.ɵɵFactoryDeclaration<ListBoxComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ListBoxComponent, "kendo-listbox", never, { "textField": "textField"; "data": "data"; "size": "size"; "toolbar": "toolbar"; "itemDisabled": "itemDisabled"; }, { "selectionChange": "selectionChange"; "actionClick": "actionClick"; }, ["itemTemplate"], never>;
}
