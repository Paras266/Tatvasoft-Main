import { EventEmitter, OnInit } from '@angular/core';
import { DomSanitizer, SafeHtml, SafeUrl } from '@angular/platform-browser';
import * as i0 from "@angular/core";
export declare class GalleryImageComponent implements OnInit {
    private _sanitizer;
    state: 'loading' | 'success' | 'failed';
    /** Progress value */
    progress: number;
    /** Is thumbnail */
    isThumbnail: boolean;
    /** Image alt */
    alt: string;
    /** Image source URL */
    src: string;
    /** Loaded image URL */
    imageUrl: SafeUrl;
    /** Custom loader template */
    loadingIcon: string;
    /** Custom loader safe template */
    loaderTemplate: SafeHtml;
    /** Custom error template */
    loadingError: string;
    /** Custom error safe template */
    errorTemplate: SafeHtml;
    errorIcon: string;
    errorSvg: SafeHtml;
    /** Stream that emits when an error occurs */
    error: EventEmitter<ErrorEvent>;
    loaded: EventEmitter<void>;
    get imageState(): string;
    constructor(_sanitizer: DomSanitizer);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<GalleryImageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<GalleryImageComponent, "gallery-image", never, { "isThumbnail": "isThumbnail"; "alt": "alt"; "src": "src"; "loadingIcon": "loadingIcon"; "loadingError": "loadingError"; "errorIcon": "errorIcon"; }, { "error": "error"; "loaded": "loaded"; }, never, never, false, never>;
}
